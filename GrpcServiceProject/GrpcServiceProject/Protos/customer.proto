syntax = "proto3";

option csharp_namespace = "WebApiProject.Protos";

package customer;

enum DbContextType {
  SQL = 0;
  MONGO = 1;
}

message GrpcCustomerDto {
  optional string id = 1;
  string customerName = 2;
  string edpouCode = 3;
  string firstName = 4;
  string lastName = 5;
  string patronymic = 6;
  string positionId = 7;
}

message InputCustomerDto {
  string customerName = 1;
  string edpouCode = 2;
  string firstName = 3;
  string lastName = 4;
  string patronymic = 5;
  string positionId = 6;
}

message ExecutionMetricsGrpc {
  optional string sqlQueryTime = 1;
  optional string mongoQueryTime = 2;
  optional string totalExecutionTime = 3;
}

message EmptyRequest {}

message GetAllCustomersResponse {
  repeated GrpcCustomerDto customers = 1;
  ExecutionMetricsGrpc metrics = 2;
}

message GetCustomerByIdRequest {
  string id = 1;
}

message GetCustomerByIdResponse {
  GrpcCustomerDto customer = 1;
  ExecutionMetricsGrpc metrics = 2;
}

message AddCustomerRequest {
  InputCustomerDto customer = 1;
  DbContextType dbType = 2;
}

message AddCustomerResponse {
  GrpcCustomerDto customer = 1;
  ExecutionMetricsGrpc metrics = 2;
}

message UpdateCustomerRequest {
  string id = 1;
  InputCustomerDto customer = 2;
}

message UpdateCustomerResponse {
  ExecutionMetricsGrpc metrics = 1;
}

message DeleteCustomerRequest {
  string id = 1;
  DbContextType dbType = 2;
}

message DeleteCustomerResponse {
  ExecutionMetricsGrpc metrics = 1;
}

service CustomerService {
  rpc GetAllCustomers (EmptyRequest) returns (GetAllCustomersResponse);
  rpc GetCustomerById (GetCustomerByIdRequest) returns (GetCustomerByIdResponse);
  rpc AddCustomer (AddCustomerRequest) returns (AddCustomerResponse);
  rpc UpdateCustomer (UpdateCustomerRequest) returns (UpdateCustomerResponse);
  rpc DeleteCustomer (DeleteCustomerRequest) returns (DeleteCustomerResponse);
}